#!/bin/bash
# Builds the core ni image from the files in src/.
cd "$(dirname "$0")"

boot_image() {
  cat src/boot src/lib.pl
}

install_stuff() {
  perl ni0 --internal/+= \
    src/lib/util \
    src/doc/internal/doc \
    src/doc/internal/class \
    src/semantic.pl \
    src/io.pl \
    src/fabric.pl
}

boot_build() {
  boot_image > ni0
  cp ni0 ni.boot
  echo "initially $(wc -c < ni0) bytes"
  perl ni0 --internal/image > ni && cp ni ni0 || exit $?
  echo "       >> $(wc -c < ni0) bytes"
  cp ni0 ni.boot.compiled

  $1

  echo "       >> $(wc -c < ni0) bytes"
  perl ni0 --internal/image > ni && cp ni ni0 || exit $?
  echo "       >> $(wc -c < ni0) bytes"

  if [[ "$(<ni0)" != "$(<ni)" ]]; then
    echo 'ni is unstable under replication; diff in ni.diff' >&2
    [[ -n "$(<ni0)" ]] && [[ -n "$(<ni)" ]] \
      && diff -C 3 ni0 ni > ni.diff
    exit 1
  else
    rm ni0
  fi

  chmod 755 ni
}

time_n() {
  n=$1
  min=none
  shift

  date +%s%N > /dev/null
  for i in `seq $n`; do
    start_nanos=$(date +%s%N)
    "$@" > /dev/null
    end_nanos=$(date +%s%N)

    if [[ $min == none ]] || (( (end_nanos - start_nanos) < min )); then
      min=$((end_nanos - start_nanos))
    fi
  done
  echo "$(( min / 1000 ))Î¼s"
}

case $1 in
boot)
  boot_image > ni0
  ;;

bench)
  boot_build install_stuff
  echo "nop:      $(time_n 100 echo) overhead"
  echo "perl:     $(time_n 100 perl -e 1) overhead"
  echo "original: $(time_n 100 perl ni.boot --internal/eval 1) overhead"
  echo "compiled: $(time_n 100 perl ni.boot.compiled --internal/eval 1) overhead"
  echo "full:     $(time_n 100 perl ni --internal/eval 1) overhead"
  ;;

*)
  boot_build install_stuff
  ;;
esac
