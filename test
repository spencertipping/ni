#!/bin/bash
cd $(dirname $0)

# TODO: with the new testing setup, we should just drop hadoop/spark images
# into this list and have ni feature-test to run when applicable.
envs=( alpine        alpine-minimal
       centos-5      centos-5-minimal
       centos-6      centos-6-minimal
       centos-7      centos-7-minimal
       debian-wheezy debian-wheezy-minimal
       debian-jessie debian-jessie-minimal
       debian-sid    debian-sid-minimal
                     fedora-20-minimal
                     fedora-21-minimal
                     fedora-22-minimal
                     fedora-23-minimal
                     fedora-24-minimal
                     fedora-25-minimal
                     gentoo-minimal
       ubuntu-12.04  ubuntu-12.04-minimal
       ubuntu-14.04  ubuntu-14.04-minimal
       ubuntu-16.04  ubuntu-16.04-minimal
       ubuntu-16.04-p3
       ubuntu-16.10  ubuntu-16.10-minimal )

build_ni_stuff() { ./build >/dev/null; }

image() { docker build -q -f env/$1 -t ni/env-$1 .; }

default_image=ubuntu-16.04

docker_dind="-v /var/run/docker.sock:/var/run/docker.sock --privileged"
docker_magic="--security-opt=seccomp=unconfined"
docker_opts="$docker_magic $docker_dind -i -m 256M --rm -v $PWD:/data:ro"

build_docker_images() {
  echo
  echo "BUILDING IMAGES"
  mode=$1
  shift
  for e; do
    image_id=$(docker images -q ni/env-$e)
    if [[ -z "$image_id" ]] || [[ $mode == --force ]]; then
      echo
      echo "BUILDING $e"
      docker build -f env/$e -t ni/env-$e .
    else
      echo "  using prebuilt $e"
    fi
  done
  echo
}

run_docker_tests() {
  for env; do
    echo
    echo "TESTING $env (stderr > test.log)"
    docker run $docker_opts --name ni-test $(image $env) \
      /usr/bin/ni --internal/test
  done 2>>test.log
  echo
}

docker_test_flow() {
  build_docker_images --cached $@
  build_ni_stuff
  run_docker_tests $@
}

gitlab_yaml() {
  echo 'image: spencertipping/ubuntu-docker'
  for e in ${envs[@]}; do
    echo "ni-$e:"
    echo "  image: spencertipping/ni-env-$e"
    echo "  script:"
    echo "    - ./ni --internal/test"
  done
}

rm -f test.log
gitlab_yaml > .gitlab-ci.yml

c=$1
shift
case $c in
-d|--docker)
  if (( $# )); then
    docker_test_flow $@
  else
    docker_test_flow ${envs[@]}
  fi
  ;;

-b|--build)
  build_docker_images --force ${envs[@]}
  ;;

-p|--push)
  build_docker_images --force ${envs[@]}
  for e in ${envs[@]}; do
    docker tag ni/env-$e $USER/ni-env-$e
    docker push $USER/ni-env-$e
  done
  ;;

-r|--repl)
  echo "NOTE: to run tests, cd /tmp && ni --internal/test"
  build_ni_stuff
  docker run $docker_opts -t --name ni-test-repl $(image ${1:-$default_image}) /bin/bash
  ;;

*)
  echo
  echo "RUNNING quick test"
  echo "(./test --docker to run in all environments)"
  echo
  build_ni_stuff
  ./ni --internal/test || exit $?
  ;;
esac
